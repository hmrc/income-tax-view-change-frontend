# microservice specific routes
->          /hmrc-frontend                                                hmrcfrontend.Routes

# Play frontend hmrc route for Assets
GET         /assets/*file                                                 controllers.Assets.versioned(path = "/public", file)

# Assets
GET         /assets/*file                                                 controllers.Assets.at(path="/public", file)

GET        /language/:lang                                                controllers.LocalLanguageController.switchToLanguage(lang: String)


#Home Controller
GET         /                                                             controllers.HomeController.show(origin: Option[String] ?= None)
GET         /income-tax                                                   controllers.HomeController.show(origin: Option[String] ?= None)
GET         /agents/client-income-tax                                     controllers.HomeController.showAgent()
GET         /agents                                                       controllers.HomeController.showAgent()

#NextUpdates
GET         /next-updates                                                 controllers.NextUpdatesController.show(origin: Option[String] ?= None)
GET         /agents/next-updates                                          controllers.NextUpdatesController.showAgent()

#Reporting Frequency
GET         /reporting-frequency                                          controllers.ReportingFrequencyPageController.show(isAgent:Boolean = false)
GET         /agents/reporting-frequency                                   controllers.ReportingFrequencyPageController.show(isAgent:Boolean = true)

#OptOut
GET         /optout/review-confirm-taxyear                                controllers.optOut.ConfirmOptOutController.show(isAgent:Boolean = false)
GET         /agents/optout/review-confirm-taxyear                         controllers.optOut.ConfirmOptOutController.show(isAgent:Boolean = true)
POST        /optout/review-confirm-taxyear                                controllers.optOut.ConfirmOptOutController.submit(isAgent: Boolean = false)
POST        /agents/optout/review-confirm-taxyear                         controllers.optOut.ConfirmOptOutController.submit(isAgent: Boolean = true)

GET         /optout/error                                                 controllers.optOut.OptOutErrorController.show(isAgent: Boolean = false)
GET         /agents/optout/error                                          controllers.optOut.OptOutErrorController.show(isAgent: Boolean = true)

GET         /optout/confirmed                                             controllers.optOut.ConfirmedOptOutController.show(isAgent: Boolean = false)
GET         /agents/optout/confirmed                                      controllers.optOut.ConfirmedOptOutController.show(isAgent: Boolean = true)

GET         /optout/single-taxyear-warning                                controllers.optOut.SingleYearOptOutWarningController.show(isAgent: Boolean = false)
GET         /agents/optout/single-taxyear-warning                         controllers.optOut.SingleYearOptOutWarningController.show(isAgent: Boolean = true)
POST        /optout/single-taxyear-warning                                controllers.optOut.SingleYearOptOutWarningController.submit(isAgent: Boolean = false)
POST        /agents/optout/single-taxyear-warning                         controllers.optOut.SingleYearOptOutWarningController.submit(isAgent: Boolean = true)

GET         /optout/choose-taxyear                                        controllers.optOut.OptOutChooseTaxYearController.show(isAgent: Boolean = false)
GET         /agents/optout/choose-taxyear                                 controllers.optOut.OptOutChooseTaxYearController.show(isAgent: Boolean = true)
POST        /optout/choose-taxyear                                        controllers.optOut.OptOutChooseTaxYearController.submit(isAgent: Boolean = false)
POST        /agents/optout/choose-taxyear                                 controllers.optOut.OptOutChooseTaxYearController.submit(isAgent: Boolean = true)

GET         /optout                                                       controllers.optOutNew.OptOutTaxYearQuestionController.show(isAgent: Boolean = false, taxYear: Option[String] ?= None)
GET         /agents/optout                                                controllers.optOutNew.OptOutTaxYearQuestionController.show(isAgent: Boolean = true, taxYear: Option[String] ?= None)
POST        /optout                                                       controllers.optOutNew.OptOutTaxYearQuestionController.submit(isAgent: Boolean = false, taxYear: Option[String] ?= None)
POST        /agents/optout                                                controllers.optOutNew.OptOutTaxYearQuestionController.submit(isAgent: Boolean = true, taxYear: Option[String] ?= None)

GET         /sign-up                                                      controllers.optIn.SignUpTaxYearQuestionController.show(isAgent: Boolean = false, taxYear: Option[String] ?= None)
GET         /agents/sign-up                                               controllers.optIn.SignUpTaxYearQuestionController.show(isAgent: Boolean = true, taxYear: Option[String] ?= None)
POST        /sign-up                                                      controllers.optIn.SignUpTaxYearQuestionController.submit(isAgent: Boolean = false, taxYear: Option[String] ?= None)
POST        /agents/sign-up                                               controllers.optIn.SignUpTaxYearQuestionController.submit(isAgent: Boolean = true, taxYear: Option[String] ?= None)

GET         /optout/cancelled                                             controllers.optOut.OptOutCancelledController.show()
GET         /agents/optout/cancelled                                      controllers.optOut.OptOutCancelledController.showAgent()

#OptOut new
GET         /opt-out/check-your-answers/:taxYear                          controllers.optOutNew.ConfirmOptOutUpdateController.show(isAgent: Boolean = false, taxYear: String)
GET         /agents/opt-out/check-your-answers/:taxYear                   controllers.optOutNew.ConfirmOptOutUpdateController.show(isAgent: Boolean = true, taxYear: String)
POST        /opt-out/check-your-answers/:taxYear                          controllers.optOutNew.ConfirmOptOutUpdateController.submit(isAgent: Boolean = false, taxYear: String)
POST        /agents/opt-out/check-your-answers/:taxYear                   controllers.optOutNew.ConfirmOptOutUpdateController.submit(isAgent: Boolean = true, taxYear: String)

# Opt In
GET         /opt-in/start                                                 controllers.optIn.BeforeYouStartController.show(isAgent: Boolean = false)
GET         /agents/opt-in/start                                          controllers.optIn.BeforeYouStartController.show(isAgent: Boolean = true)

GET         /sign-up/start                                                controllers.optIn.SignUpStartController.show(isAgent: Boolean = false)
GET         /agents/sign-up/start                                         controllers.optIn.SignUpStartController.show(isAgent: Boolean = true)

GET         /opt-in/single-taxyear-warning                                controllers.optIn.SingleTaxYearOptInWarningController.show(isAgent: Boolean = false)
GET         /agents/opt-in/single-taxyear-warning                         controllers.optIn.SingleTaxYearOptInWarningController.show(isAgent: Boolean = true)
POST        /opt-in/single-taxyear-warning                                controllers.optIn.SingleTaxYearOptInWarningController.submit(isAgent: Boolean = false)
POST        /agents/opt-in/single-taxyear-warning                         controllers.optIn.SingleTaxYearOptInWarningController.submit(isAgent: Boolean = true)

GET         /opt-in/choose-tax-year                                         controllers.optIn.ChooseYearController.show(isAgent: Boolean = false)
GET         /agents/opt-in/choose-tax-year                                  controllers.optIn.ChooseYearController.show(isAgent: Boolean = true)
POST        /opt-in/choose-tax-year                                         controllers.optIn.ChooseYearController.submit(isAgent: Boolean = false)
POST        /agents/opt-in/choose-tax-year                                  controllers.optIn.ChooseYearController.submit(isAgent: Boolean = true)

GET         /opt-in/check-your-answers                                         controllers.optIn.CheckYourAnswersController.show(isAgent: Boolean = false)
GET         /agents/opt-in/check-your-answers                                  controllers.optIn.CheckYourAnswersController.show(isAgent: Boolean = true)
POST        /opt-in/check-your-answers                                         controllers.optIn.CheckYourAnswersController.submit(isAgent: Boolean = false)
POST        /agents/opt-in/check-your-answers                                  controllers.optIn.CheckYourAnswersController.submit(isAgent: Boolean = true)

GET         /opt-in/completed                                             controllers.optIn.OptInCompletedController.show(isAgent: Boolean = false)
GET         /agents/opt-in/completed                                      controllers.optIn.OptInCompletedController.show(isAgent: Boolean = true)

GET         /sign-up/completed                                            controllers.optIn.SignUpCompletedController.show(isAgent: Boolean = false)
GET         /agents/sign-up/completed                                     controllers.optIn.SignUpCompletedController.show(isAgent: Boolean = true)


GET         /opt-in/error                                                 controllers.optIn.OptInErrorController.show(isAgent: Boolean = false)
GET         /agents/opt-in/error                                          controllers.optIn.OptInErrorController.show(isAgent: Boolean = true)

GET         /opt-in/confirm-tax-year                                      controllers.optIn.ConfirmTaxYearController.show(isAgent: Boolean = false)
GET         /agents/opt-in/confirm-tax-year                               controllers.optIn.ConfirmTaxYearController.show(isAgent: Boolean = true)
POST        /opt-in/confirm-tax-year                                      controllers.optIn.ConfirmTaxYearController.submit(isAgent: Boolean = false)
POST        /agents/opt-in/confirm-tax-year                               controllers.optIn.ConfirmTaxYearController.submit(isAgent: Boolean = true)

GET         /opt-in/cancelled                                             controllers.optIn.OptInCancelledController.show()
GET         /agents/opt-in/cancelled                                      controllers.optIn.OptInCancelledController.showAgent()

# Tax Year Summary
GET         /tax-year-summary/:taxYear                                    controllers.TaxYearSummaryController.renderTaxYearSummaryPage(taxYear: Int, origin: Option[String] ?= None)
GET         /agents/tax-year-summary/:taxYear                             controllers.TaxYearSummaryController.renderAgentTaxYearSummaryPage(taxYear: Int)

#IncomeSummary
GET         /:taxYear/income                                              controllers.IncomeSummaryController.showIncomeSummary(taxYear: Int, origin: Option[String] ?= None)
GET         /agents/:taxYear/income                                       controllers.IncomeSummaryController.showIncomeSummaryAgent(taxYear: Int)

#Tax Due
GET         /:taxYear/tax-calculation                                     controllers.TaxDueSummaryController.showTaxDueSummary(taxYear: Int, origin: Option[String] ?= None)

#Agents Tax Due
GET         /agents/:taxYear/tax-calculation                              controllers.TaxDueSummaryController.showTaxDueSummaryAgent(taxYear: Int)

#Deductions Summary
GET         /:taxYear/allowances-and-deductions                           controllers.DeductionsSummaryController.showDeductionsSummary(taxYear: Int, origin: Option[String] ?= None)
GET         /agents/:taxYear/allowances-and-deductions                    controllers.DeductionsSummaryController.showDeductionsSummaryAgent(taxYear: Int)

#TaxYears
GET         /tax-years                                                    controllers.TaxYearsController.showTaxYears(origin: Option[String] ?= None)
GET         /agents/tax-years                                             controllers.TaxYearsController.showAgentTaxYears()

#Payment
GET         /payment                                                      controllers.PaymentController.paymentHandoff(amountInPence: Long, origin: Option[String] ?= None)
GET         /agents/payment                                               controllers.PaymentController.agentPaymentHandoff(amountInPence: Long)

#Payment Allocation
GET         /payment-made-to-hmrc                                         controllers.PaymentAllocationsController.viewPaymentAllocation(documentNumber: String, origin: Option[String] ?= None)
GET         /agents/payment-made-to-hmrc                                  controllers.PaymentAllocationsController.viewPaymentAllocationAgent(documentNumber: String)

#WhatYouOwe
GET         /what-you-owe                                                 controllers.WhatYouOweController.show(origin: Option[String] ?= None)
GET         /agents/what-your-client-owes                                 controllers.WhatYouOweController.showAgent()

#Your Self Assessment Charges
GET         /your-self-assessment-charges                                 controllers.YourSelfAssessmentChargesController.show(origin: Option[String] ?= None)
GET         /agents/your-self-assessment-charges                          controllers.YourSelfAssessmentChargesController.showAgent()

#Charge summary
GET         /tax-years/:taxYear/charge                                    controllers.ChargeSummaryController.show(taxYear: Int, id: String, isInterestCharge: Boolean ?= false, origin: Option[String] ?= None)
GET         /agents/tax-years/:taxYear/charge                             controllers.ChargeSummaryController.showAgent(taxYear: Int, id: String, isInterestCharge: Boolean ?= false)

#Triggered Migration
GET         /check-your-active-businesses/hmrc-record                     controllers.triggeredMigration.CheckHmrcRecordsController.show(isAgent: Boolean = false)
GET         /agents/check-your-active-businesses/hmrc-record              controllers.triggeredMigration.CheckHmrcRecordsController.show(isAgent: Boolean = true)

# Triggered migration – confirm active businesses
GET   /check-your-active-businesses/confirm          controllers.triggeredMigration.CheckActiveBusinessesConfirmController.show(isAgent: Boolean = false)
GET   /agents/check-your-active-businesses/confirm   controllers.triggeredMigration.CheckActiveBusinessesConfirmController.show(isAgent: Boolean = true)
POST  /check-your-active-businesses/confirm          controllers.triggeredMigration.CheckActiveBusinessesConfirmController.submit(isAgent: Boolean = false)
POST  /agents/check-your-active-businesses/confirm   controllers.triggeredMigration.CheckActiveBusinessesConfirmController.submit(isAgent: Boolean = true)

#Feedback Routes
GET         /feedback                                                     controllers.feedback.FeedbackController.show()
GET         /agents/feedback                                              controllers.feedback.FeedbackController.showAgent()
POST        /feedback                                                     controllers.feedback.FeedbackController.submit()
POST        /agents/feedback                                              controllers.feedback.FeedbackController.submitAgent()
GET         /thankyou                                                     controllers.feedback.FeedbackController.thankYou()
GET         /agents/thankyou                                              controllers.feedback.FeedbackController.thankYouAgent()

#Timeout Routes
GET         /session-timeout                                              controllers.timeout.SessionTimeoutController.timeout()
GET         /keep-alive                                                   controllers.timeout.SessionTimeoutController.keepAlive()

#Sign Out Routes
GET         /sign-out                                                     controllers.SignOutController.signOut()

#Sign In Routes
GET         /sign-in                                                      controllers.SignInController.signIn()

#Not Enrolled
GET         /cannot-access-service                                        controllers.errors.NotEnrolledController.show()

#Uplift Failed
GET         /cannot-view-page                                             controllers.errors.UpliftFailedController.show()

#Uplift Success
GET         /uplift-success                                               controllers.UpliftSuccessController.success(origin: Option[String])

#BTA Partial
GET         /partial                                                      controllers.bta.BTAPartialController.setupPartial()

#CalculationId details poller
GET         /calculation/:taxYear/submitted                               controllers.CalculationPollingController.calculationPoller(taxYear: Int, isFinalCalc: Boolean = false, origin: Option[String] ?= None)
GET         /agents/calculation/:taxYear/submitted                        controllers.CalculationPollingController.calculationPollerAgent(taxYear: Int, isFinalCalc: Boolean = false, origin: Option[String] ?= None)

#Language Controller
GET         /language/:lang                                               controllers.ItvcLanguageController.switchToLanguage(lang: String)

#Payment history
GET         /payment-refund-history                                       controllers.PaymentHistoryController.show(origin: Option[String] ?= None)
GET         /agents/payment-refund-history                                controllers.PaymentHistoryController.showAgent()
GET         /refund-status                                                controllers.PaymentHistoryController.refundStatus()


#InYear Tax
GET         /tax-overview                                                 controllers.InYearTaxCalculationController.show(origin: Option[String] ?= None)
GET         /agents/tax-overview                                          controllers.InYearTaxCalculationController.showAgent()

#Final Tax URLs
GET         /:taxYear/final-tax-overview                                  controllers.FinalTaxCalculationController.show(taxYear: Int, origin: Option[String] ?= None)
POST        /:taxYear/final-tax-overview                                  controllers.FinalTaxCalculationController.submit(taxYear: Int, origin: Option[String] ?= None)
GET         /:taxYear/final-tax-overview/calculate                        controllers.CalculationPollingController.calculationPoller(taxYear: Int, isFinalCalc: Boolean = true, origin: Option[String] ?= None)
GET         /agents/:taxYear/final-tax-overview/calculate                 controllers.CalculationPollingController.calculationPollerAgent(taxYear: Int, isFinalCalc: Boolean = true, origin: Option[String] ?= None)

#Final Tax URLs - agents
GET         /agents/:taxYear/final-tax-overview                           controllers.FinalTaxCalculationController.showAgent(taxYear: Int)
POST        /agents/:taxYear/final-tax-overview                           controllers.FinalTaxCalculationController.agentSubmit(taxYear: Int)

GET         /switch-to-welsh                                              controllers.ItvcLanguageController.switchToWelsh(fragment: Option[String])
GET         /switch-to-english                                            controllers.ItvcLanguageController.switchToEnglish(fragment: Option[String])

#custom not found
GET         /custom-not-found                                             controllers.errors.NotFoundDocumentIDLookupController.show()

#Forecast income summary
GET         /:taxYear/forecast-income                                     controllers.ForecastIncomeSummaryController.show(taxYear: Int, origin: Option[String] ?= None)
GET         /agents/:taxYear/forecast-income                              controllers.ForecastIncomeSummaryController.showAgent(taxYear: Int)

#Forecast Tax Calc Summary
GET         /:taxYear/forecast-tax-calculation                            controllers.ForecastTaxCalcSummaryController.show(taxYear: Int, origin: Option[String] ?= None)
GET         /agents/:taxYear/forecast-tax-calculation                     controllers.ForecastTaxCalcSummaryController.showAgent(taxYear: Int)

#Credits and Refunds
GET          /claim-refund                                                controllers.CreditAndRefundController.show(origin: Option[String] ?= None)
GET          /agents/claim-refund                                         controllers.CreditAndRefundController.showAgent()
GET          /start-refund                                                controllers.CreditAndRefundController.startRefund()


#Credits
GET         /credits-from-hmrc/:calendarYear                              controllers.CreditsSummaryController.showCreditsSummary(calendarYear: Int, origin: Option[String] ?= None)
GET         /agents/credits-from-hmrc/:calendarYear                       controllers.CreditsSummaryController.showAgentCreditsSummary(calendarYear: Int)

#Refund to taxpayer
GET         /refund-to-taxpayer/:repaymentRequestNumber                    controllers.RefundToTaxPayerController.show(repaymentRequestNumber: String, origin: Option[String] ?= None)
GET         /agents/refund-to-taxpayer/:repaymentRequestNumber             controllers.RefundToTaxPayerController.showAgent(repaymentRequestNumber: String)

# Users not migrated to ETMP
GET          /how-to-claim-refund                                         controllers.NotMigratedUserController.show()
GET          /agents/how-to-claim-refund                                  controllers.NotMigratedUserController.showAgent()

GET          /how-to-claim-refund-external                                controllers.NotMigratedUserController.redirect()
GET          /agents/how-to-claim-refund-external                         controllers.NotMigratedUserController.redirectAgent()

->          /                                                             manageBusinesses.Routes
->          /                                                             claimToAdjustPoa.Routes