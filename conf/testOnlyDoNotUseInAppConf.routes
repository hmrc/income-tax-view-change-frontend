
# IF THE MICRO-SERVICE DOES NOT NEED ANY TEST-ONLY END-POINTS (ALWAYS PREFERRED) DELETE THIS FILE.

# !!!WARNING!!! This file MUST NOT be referenced in the "application.conf" file to avoid risk of rolling test routes in the production environment.
# If you need test routes when running tests in CI make sure that the profile for this micro-service (used by service-manager) defines this router as parameter.
# To do so add the following line to the micro-service profile: "-Dapplication.router=testOnlyDoNotUseInAppConf.Routes"
# To start the micro-service locally using the test routes run the following command: "sbt run -Dapplication.router=testOnlyDoNotUseInAppConf.Routes" 

# Any test-only end-point should be defined here.
# !!!WARNING!!! Every route defined in this file MUST be prefixed with "/test-only/". This is because NGINX is blocking every uri containing the string "test-only" in production.
# Failing to follow this rule may result in test routes deployed in production.

# Add all the application routes to the prod.routes file

GET         /report-quarterly/income-and-expenses/view/test-only/stub-client                          testOnly.controllers.StubClientDetailsController.show
POST        /report-quarterly/income-and-expenses/view/test-only/stub-client                          testOnly.controllers.StubClientDetailsController.submit

GET         /report-quarterly/income-and-expenses/view/test-only/stub-schema                          testOnly.controllers.StubSchemaController.show
POST        /report-quarterly/income-and-expenses/view/test-only/stub-schema                          testOnly.controllers.StubSchemaController.submit

+ nocsrf
POST        /report-quarterly/income-and-expenses/view/test-only/stub-schema/proxy                    testOnly.controllers.StubSchemaController.stubProxy

+ nocsrf
DELETE      /report-quarterly/income-and-expenses/view/test-only/all-schemas/proxy                    testOnly.controllers.StubSchemaController.deleteAllProxy


GET         /report-quarterly/income-and-expenses/view/test-only/stub-data                            testOnly.controllers.StubDataController.show
POST        /report-quarterly/income-and-expenses/view/test-only/stub-data                            testOnly.controllers.StubDataController.submit

+ nocsrf
POST        /report-quarterly/income-and-expenses/view/test-only/stub-data/proxy                      testOnly.controllers.StubDataController.stubProxy

+ nocsrf
DELETE      /report-quarterly/income-and-expenses/view/test-only/all-data/proxy                       testOnly.controllers.StubDataController.deleteAllProxy

GET         /report-quarterly/income-and-expenses/view/test-only/add-user                             testOnly.controllers.StubUsersController.show
POST        /report-quarterly/income-and-expenses/view/test-only/add-user                             testOnly.controllers.StubUsersController.submit

+ nocsrf
POST        /report-quarterly/income-and-expenses/view/test-only/add-user/proxy                       testOnly.controllers.StubUsersController.stubUsers

GET         /report-quarterly/income-and-expenses/view/test-only/feature-switch                       testOnly.controllers.FeatureSwitchController.show
+ nocsrf
POST        /report-quarterly/income-and-expenses/view/test-only/feature-switch                       testOnly.controllers.FeatureSwitchController.submit

GET         /report-quarterly/income-and-expenses/view/test-only/test-headers                         testOnly.controllers.TestHeadersController.showTestHeaders
POST        /report-quarterly/income-and-expenses/view/test-only/test-headers                         testOnly.controllers.TestHeadersController.submitTestHeaders

GET         /report-quarterly/income-and-expenses/view/test-only/bta-partial                          testOnly.controllers.TestBTAPartialController.viewBTAPartial

->          /                                                                                          prod.Routes
